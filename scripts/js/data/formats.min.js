(function() {
    setTimeout(function() {
        return function() {
            var _base;
            return null == window.supercharts && (window.supercharts = {}), null == (_base = window.supercharts).premiumFormats && (_base.premiumFormats = {}), 
            window.supercharts.formats = [ {
                id: 1,
                active: !0,
                name: "Bar Chart",
                exampleData: window.supercharts.exampleData.A.data,
                colHeaders: window.supercharts.exampleData.A.colHeaders,
                minSpareCols: 0,
                colParseFns: window.supercharts.exampleData.A.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys;
                    return keys = helpers.dataKeys(model.get("dataSource")), options.series = {
                        argumentField: "0",
                        valueField: "1",
                        name: keys[1],
                        type: "bar"
                    }, options;
                }
            }, {
                id: 3,
                active: !0,
                name: "Stacked-bar Chart",
                exampleData: window.supercharts.exampleData.B.data,
                colHeaders: window.supercharts.exampleData.B.colHeaders,
                minSpareCols: 1,
                colParseFns: window.supercharts.exampleData.B.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys, series;
                    return keys = helpers.dataKeys(model.get("dataSource")), series = [], null == options.commonSeriesSettings && (options.commonSeriesSettings = {}), 
                    options.commonSeriesSettings.type = "stackedBar", options.commonSeriesSettings.argumentField = "0", 
                    _.each(keys, function(k, i) {
                        return null != k && 0 !== i ? series.push({
                            valueField: "" + i,
                            name: k
                        }) : void 0;
                    }), options.series = series, options;
                }
            }, {
                id: 2,
                active: !0,
                name: "Pie Chart",
                exampleData: window.supercharts.exampleData.A.data,
                colHeaders: window.supercharts.exampleData.A.colHeaders,
                minSpareCols: 0,
                colParseFns: window.supercharts.exampleData.A.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys;
                    return keys = helpers.dataKeys(model.get("dataSource")), options.series = {
                        argumentField: "0",
                        valueField: "1",
                        name: keys[1],
                        type: "pie"
                    }, options;
                }
            }, {
                id: 4,
                active: !0,
                name: "Line Chart",
                exampleData: window.supercharts.exampleData.A.data,
                colHeaders: window.supercharts.exampleData.A.colHeaders,
                minSpareCols: 0,
                colParseFns: window.supercharts.exampleData.A.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys;
                    return keys = helpers.dataKeys(model.get("dataSource")), options.series = {
                        argumentField: "0",
                        valueField: "1",
                        name: keys[1],
                        type: "line"
                    }, options;
                }
            }, {
                id: 5,
                active: !0,
                name: "Multi-line Chart",
                exampleData: window.supercharts.exampleData.B.data,
                colHeaders: window.supercharts.exampleData.B.colHeaders,
                minSpareCols: 1,
                colParseFns: window.supercharts.exampleData.B.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys, series;
                    return keys = helpers.dataKeys(model.get("dataSource")), series = [], null == options.commonSeriesSettings && (options.commonSeriesSettings = {}), 
                    options.commonSeriesSettings.type = "line", options.commonSeriesSettings.argumentField = "0", 
                    _.each(keys, function(k, i) {
                        return null != k && 0 !== i ? series.push({
                            valueField: "" + i,
                            name: k
                        }) : void 0;
                    }), options.series = series, options;
                }
            }, {
                id: 6,
                name: "Area Chart",
                exampleData: window.supercharts.exampleData.B.data,
                colHeaders: window.supercharts.exampleData.B.colHeaders,
                minSpareCols: 1,
                colParseFns: window.supercharts.exampleData.B.colParseFns,
                setUpSeries: function(model, options, helpers) {
                    var keys, series;
                    return keys = helpers.dataKeys(model.get("dataSource")), series = [], null == options.commonSeriesSettings && (options.commonSeriesSettings = {}), 
                    options.commonSeriesSettings.type = "area", options.commonSeriesSettings.argumentField = "0", 
                    _.each(keys, function(k, i) {
                        return null != k && 0 !== i ? series.push({
                            valueField: "" + i,
                            name: k
                        }) : void 0;
                    }), options.series = series, options;
                }
            } ].concat(window.supercharts.premiumFormats);
        };
    }(this));
}).call(this);